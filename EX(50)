/**************************************************************************************************
 Name        : EX(50)
 Author      : Fady magdy
 Description : Write a C function to return an array containing the values 
between two 8-bits unsigned integers IN DESCENDING ORDER 
INCLUSIZE. The function takes 2 values (LowerValue and 
UpperValue), it shall determine the values in between, and then 
arrange the sequence in descending order including the upper 
and lower values.
If the LowerValue is greater than the UpperValue, return an array 
of 2 elements, both containing value = 0xFF
Example:
Input: LowerValue=2 and UpperValue=5
Output:
Output Array=5,4,3,2
Output Array Size=4

 **************************************************************************************************/
 
#include <stdio.h>

/* Global array is empty and will be filled by PrintReverseInclusive function */
int OutputArray[256];

int * PrintReverseInclusive(int LowerNumber,int UpperNumber,int * result_size)
{
	int i;
	*result_size = 0;
	/* check the exit conditions */
	if(LowerNumber > UpperNumber)
	{
		OutputArray[0] = 0xFF;
		OutputArray[1] = 0xFF;
		*result_size = 2;
	}
	else
	{
		/* start looping from UpperNumber until LowerNumber to fill the array */
		for(i=UpperNumber;i>=LowerNumber;i--)
		{
			OutputArray[*result_size] = i;
			(*result_size)++;
		}
	}
	return OutputArray;
}

int main(void) {
	int count;
    int n1 = 5,n2=10;
    int *ptr;
	int arr_size_used = 0;
	
	ptr = PrintReverseInclusive(n1,n2,&arr_size_used);

	printf("Output Array = ");
	
	/* start looping from 0 to the last used element in the array */
	for(count=0;count<arr_size_used;count++)
	{
		/* access the global array using the ptr */
		printf("%d ",ptr[count]);
	}
	printf("\nOutput Array Size = %d",arr_size_used);
	return 0;
}
